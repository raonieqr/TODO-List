(() => {
  "use strict";
  class e {
    static getLastId() {
      return parseInt(localStorage.getItem("lastId")) || 1;
    }
    static getStorage(e) {
      return localStorage.getItem(e);
    }
    static incrementLastId() {
      const e = this.getLastId();
      localStorage.setItem("lastId", String(e + 1));
    }
    static storeTask(e) {
      const t = this.getLastId(),
        n = JSON.parse(localStorage.getItem("taskArray")) || [];
      (e.id = t),
        n.push(e),
        localStorage.setItem("taskArray", JSON.stringify(n)),
        this.incrementLastId();
    }
    static storeUpdate(e, t) {
      localStorage.removeItem(e), localStorage.setItem(e, JSON.stringify(t));
    }
  }
  function t(e) {
    return /^\d{2}\/\d{2}\/\d{4} \d{2}:\d{2}$/.test(e);
  }
  function n(e) {
    const [t, n] = e.split(" "),
      [o, l, i] = t.split("/"),
      [a, r] = n.split(":"),
      d = parseInt(l, 10),
      s = parseInt(a, 10),
      c = parseInt(r, 10),
      u = new Date(i, d - 1, o, s, c).getTime() - Date.now();
    return (function (e) {
      return e > 12;
    })(d) ||
      (function (e, t) {
        return e > 23 || t > 59;
      })(s, c) ||
      (function (e, t) {
        return (
          (2 === e && t > 29) || ([4, 6, 9, 11].includes(e) && t > 30) || t > 31
        );
      })(d, o) ||
      (function (e) {
        return e < 0;
      })(u)
      ? 0
      : 1;
  }
  function o(e) {
    return ["todo", "doing", "done"].includes(e);
  }
  function l(e) {
    return /^[1-5]$/.test(e);
  }
  document.addEventListener("DOMContentLoaded", function () {
    let i = document.getElementById("createTask"),
      a = document.getElementById("taskForm"),
      r = document.getElementById("home");
    const d = document.getElementById("actions");
    let s = !1;
    i.addEventListener("click", function () {
      i.classList.add("hiddenItem"),
        (r.style.display = "none"),
        (a.style.display = "flex"),
        a.scrollIntoView({ behavior: "smooth" });
    });
    let c = document.getElementById("addTask"),
      u = e.getStorage("taskArray"),
      y = u ? JSON.parse(u) : [];
    console.log(JSON.stringify(y, null, 2)),
      c.addEventListener("click", function (i) {
        i.preventDefault();
        let a = (function () {
          const i = [
              "name",
              "description",
              "category",
              "priority",
              "status",
              "dateTime",
            ],
            a = {};
          for (const e of i)
            if (((a[e] = document.getElementById(e).value), "" === a[e].trim()))
              return (
                alert("Error: Todos os campos devem ser preenchidos."), null
              );
          return o(a.status)
            ? l(a.priority)
              ? t(a.dateTime) && n(a.dateTime)
                ? (e.storeTask(a), a)
                : (alert(`Error: data ${a.dateTime} inválida`), null)
              : (alert("Error: Prioridade inválida. Use um número de 1 a 5."),
                null)
            : (alert(
                "Error: Status inválido. Permitidos: todo, doing ou done.",
              ),
              null);
        })();
        a &&
          (alert(`Tarefa ${a.name} foi criada`),
          y.push(a),
          (s = !0),
          document
            .querySelectorAll("input[type='text'], select")
            .forEach((e) => (e.value = "")));
      }),
      s && (e.storeTask(y), (s = !1));
    let m = document.getElementById("showTask"),
      p = document.getElementById("tasks"),
      h = document.getElementById("addTaskList");
    function E(e) {
      let t = document.createElement("td");
      return (t.innerHTML = e), t;
    }
    function g(t, n) {
      1 === y.length ? (y.pop(), (d.style.display = "none")) : y.splice(t, 1),
        e.storeUpdate("taskArray", y),
        n.parentNode.removeChild(n),
        0 ===
          document.querySelectorAll('input[type="checkbox"]:checked').length &&
          (d.style.display = "none");
    }
    function f(e) {
      return (function (e) {
        let t = document.createElement("tr");
        return (
          e.forEach((e) => {
            t.appendChild(e);
          }),
          t
        );
      })([
        E('<input type="checkbox" />'),
        E(e.id),
        E(e.name),
        E(e.description),
        E(e.category),
        E(e.priority),
        E(e.status),
        E(e.dateTime),
        E(
          '<i id="pencil" class="ph ph-pencil-line"></i><i id="trash" class="ph ph-trash"></i>',
        ),
      ]);
    }
    m.addEventListener("click", function () {
      y.length <= 0
        ? alert("Lista vazia")
        : ((h.style.display = "inline-block"),
          (m.style.display = "none"),
          (a.style.display = "none"),
          (p.style.display = "block"),
          p.scrollIntoView({ behavior: "smooth" }),
          v());
    });
    var k = 0;
    function v() {
      let e = document.createElement("thead"),
        t = document.createElement("tbody");
      for (; p.firstChild; ) p.removeChild(p.firstChild);
      let n = (function () {
        const e = document.createElement("tr");
        return (
          (e.innerHTML =
            "\n      <th></th>\n      <th>Id</th>\n      <th>Nome</th>\n      <th>Descrição</th>\n      <th>Categoria</th>\n      <th>Prioridade</th>\n      <th>Status</th>\n      <th>Data e Hora</th>\n      <th>Ações</th>\n    "),
          e
        );
      })();
      e.appendChild(n);
      for (let n = 0; n < y.length; n++) {
        let o = y[n],
          l = f(o);
        t.appendChild(l),
          p.appendChild(e),
          p.appendChild(t),
          l.querySelector("#trash").addEventListener("click", function () {
            g(n, l);
          }),
          l.querySelector("#pencil").addEventListener("click", function () {
            (k = n), B(o);
          });
      }
      var o;
      (o = document.querySelectorAll('input[type="checkbox"]')).forEach(
        function (e) {
          e.addEventListener("change", function () {
            let e = Array.from(o).some((e) => e.checked);
            d.style.display = e ? "block" : "none";
          });
        },
      );
    }
    function I() {
      let e = Array.from(document.querySelectorAll("#tasks tbody tr")).filter(
        (e) => e.querySelector('input[type="checkbox"]').checked,
      );
      return (
        (selectedRowsArray = e.map((e) =>
          Number(e.querySelector("td:nth-child(2)").textContent),
        )),
        selectedRowsArray
      );
    }
    function S() {
      let e = document.getElementById("editPageTask");
      "block" === e.style.display
        ? ((h.style.display = "block"),
          p.classList.remove("modalBlur"),
          (e.style.display = "none"))
        : ((e.style.display = "block"),
          (h.style.display = "none"),
          p.classList.add("modalBlur"));
    }
    function B(e) {
      S();
      let t = document.getElementById("nameEdit"),
        n = document.getElementById("descriptionEdit"),
        o = document.getElementById("categoryEdit"),
        l = document.getElementById("priorityEdit"),
        i = document.getElementById("statusEdit"),
        a = document.getElementById("dateTimeEdit");
      (t.value = e.name),
        (n.value = e.description),
        (o.value = e.category),
        (l.value = e.priority),
        (i.value = e.status),
        (a.value = e.dateTime);
    }
    function L() {
      document
        .querySelectorAll('input[type="radio"]')
        .forEach((e) => (e.checked = !1));
    }
    function T() {
      let e = document.getElementById("editStatusTask");
      "block" === e.style.display
        ? (p.classList.remove("modalBlur"),
          (e.style.display = "none"),
          (h.style.display = "block"),
          document
            .querySelectorAll('input[type="checkbox"]')
            .forEach((e) => (e.checked = !1)),
          L())
        : ((e.style.display = "block"),
          p.classList.add("modalBlur"),
          (d.style.display = "none"),
          (h.style.display = "none"));
    }
    function b() {
      (m.style.display = "none"),
        (a.style.display = "none"),
        (h.style.display = "inline-block"),
        (p.style.display = "block"),
        p.scrollIntoView({ behavior: "smooth" }),
        v(),
        m.removeEventListener("click", b);
    }
    d.addEventListener("click", function () {
      T();
    }),
      document
        .getElementById("btnStatusTask")
        .addEventListener("click", function () {
          let t = document.querySelectorAll('input[type="radio"]:checked'),
            n = [];
          if (((n = I()), t.length > 0)) {
            for (var o = t[0].value; 0 !== n.length; ) {
              let e = n.pop();
              y.forEach((t) => {
                t.id === e && (t.status = o);
              });
            }
            e.storeUpdate("taskArray", y),
              v(),
              alert("Status modificado!"),
              T();
          } else alert("Error: selecione uma opção");
        }),
      btnEditTask.addEventListener("click", () => {
        !(function (i) {
          const a = (function () {
            const e = document.getElementById("nameEdit"),
              t = document.getElementById("descriptionEdit"),
              n = document.getElementById("categoryEdit"),
              o = document.getElementById("priorityEdit"),
              l = document.getElementById("statusEdit"),
              i = document.getElementById("dateTimeEdit");
            return {
              name: e.value,
              description: t.value,
              category: n.value,
              priority: o.value,
              status: l.value,
              dateTime: i.value,
            };
          })();
          var r;
          (function (e) {
            const {
              name: t,
              description: n,
              category: o,
              priority: l,
              status: i,
              dateTime: a,
            } = e;
            return (
              !!(t && n && o && l && i && a) ||
              (alert("Erro: Todos os campos devem ser preenchidos."), !1)
            );
          })(a) &&
            o(a.status) &&
            l(a.priority) &&
            ((t((r = a.dateTime)) && n(r)) ||
              (alert(`Erro: Data ${r} inválida`), 0)) &&
            (function (t, n) {
              return (
                void 0 !== y[t] &&
                ((y[t].name = n.name),
                (y[t].description = n.description),
                (y[t].category = n.category),
                (y[t].priority = n.priority),
                (y[t].status = n.status),
                (y[t].dateTime = n.dateTime),
                e.storeUpdate("taskArray", y),
                !0)
              );
            })(i, a) &&
            (v(), alert(`A tarefa ${y[i].name} foi editada!`), S());
        })(k);
      }),
      document
        .getElementById("closeModal")
        .addEventListener("click", function () {
          S();
        }),
      document
        .getElementById("closeModalStatus")
        .addEventListener("click", function () {
          T(), L();
        }),
      h.addEventListener("click", function () {
        (r.style.display = "none"),
          (h.style.display = "none"),
          (p.style.display = "none"),
          (d.style.display = "none"),
          (a.style.display = "flex"),
          a.scrollIntoView({ behavior: "smooth" }),
          (m.style.display = "block"),
          m.removeEventListener("click", b);
      });
  });
})();
